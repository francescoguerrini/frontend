PROCEDURA per l’utilizzo di GITHUB 


>>CLONARE LA REPOSITORY

Alla prima apertura del progetto, clonare la repository da Github con il comando:

-git clone <repository_url>

Successivamente, installare le dipendenze. Nel caso di una repository Django, 
eseguire il comando 

-pipenv shell 

poi accedere alla cartella principale del progetto ed eseguire 

-pipenv install
-python3 manage.py runserver

>>CREARE UNA ISSUE

Aprire Github, andare nella cartella del progetto e selezionare ‘Issues’ dalla navbar grigia. Cliccare ‘New Issue’. Personalizzare con titolo e descrizione. È possibile menzionare altri membri del team attraverso la ‘@’ nel menù del text editor o assegnare direttamente la issue tramite l’opzione ‘assignees’ nella sidebar a destra.

>>PRENDERE IN CARICO LA ISSUE

Se la issue non è assegnata, è possibile prenderla in carico autonomamente dal menù dell issues in visual studio.

>>CREARE IL BRANCH APPOSITO e LAVORARE SULLA ISSUE

 Una volta presa in carico la issue, è sufficiente cliccare sulla freccia accanto al nome per creare un nuovo branch, che avrà di default il nome della issue stessa.

>>PUSH e PULL REQUEST

Dopo aver completato il lavoro, fare Push del Branch 
Creare una pull request su Dev, assegnando il/i revisore/i

Se nel processo di revisione emergono delle criticità, è possibile usare la sezione commenti della PullRequest per comunicare meglio il problema (specialmente quando non si è in presenza)

Se la PullRequest viene approvata, procedere al merge con Dev


>>CHIUDERE LA ISSUE

Dopo il merge la issue viene chiusa in automatico. 
In caso di necessità di nchiusura manuale, selezionala su Github dal panel generale e cambia il suo stato con ‘Mark as’ + ‘closed’


>>ELIMINARE IL BRANCH

Per cancelalre il branch, basta selezionare ‘delete branch’ dal menù Source Control della schermata Source Control di github. In alternativa è possibile farlo dal panel generale dei branches di Github, oppure via terminale con il comando:

git push origin –delete  < nome_branch  >

>>RILASCIO IN PRODUZIONE

Una volta aggiunte tutte le funzionalità desiderate su Dev, fare pull su Release Candidate e attendere l’esito dei test manuali prima di andare su Release
